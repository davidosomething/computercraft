#!/usr/bin/env node

/* eslint-env es6, node */

/**
 * build script
 */

'use strict';

var path = require('path');
var fs = require('fs');

/**
 * map filepath in array of filepaths to object {path:{version,pastebinid}}
 *
 * @param {string} file filepath
 * @return {object}
 */
const mapObject = (file) => {
  let result = {};

  const data = fs.readFileSync(file);
  const pastebinSearch = /pastebin ([0-9A-Za-z]+)/.exec(data);
  const versionSearch = /@release ([0-9\.]+([-a-z]+)?)/.exec(data);
  const pathParts = path.parse(file);
  const filepath = path.join(pathParts.dir.substr(2), pathParts.name);

  result[filepath] = {
    version:  (versionSearch ? versionSearch[1] : '0.0.0'),
    pastebin: (pastebinSearch ? pastebinSearch[1] : '')
  };

  return result;
};

/**
 * Get filelist of dir by recursive walk
 *
 * @see http://stackoverflow.com/a/16684530
 * @param {String} dir
 */
const walk = (dir) => {
  let results = [];

  const list = fs.readdirSync(dir);

  list.forEach((file) => {
    file = `${dir}/${file}`;
    const stat = fs.statSync(file);
    if (stat && stat.isDirectory()) {
      results = results.concat(walk(file));
    }
    else {
      results.push(file);
    }
  });

  return results;
};

const luaFiles = walk('.').filter((file) => file.substr(-4) === '.lua');
const ccFiles = luaFiles.map(mapObject);

console.log(ccFiles);
